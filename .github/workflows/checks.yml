name: Check DGTP

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs:  build
    steps:
    - uses: actions/checkout@v3

    - name: Enable Integration Tests
      env:
        DGTP_TESTS_INTEGRATION_CONNECTION: ${{ secrets.DGTP_TESTS_INTEGRATION_CONNECTION }}
      if: env.DGTP_TESTS_INTEGRATION_CONNECTION != null  
      run: echo "DGTP_TESTS_INTEGRATION_RUN=TRUE" >> $GITHUB_ENV

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Run Tests
      env:
        DGTP_TESTS_INTEGRATION_CONNECTION: ${{ secrets.DGTP_TESTS_INTEGRATION_CONNECTION }}
      run: dotnet test --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: ${{ matrix.os }} Tests            
        path: tests/**/test-results.trx
        reporter: dotnet-trx

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs:  test
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Run Tests
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=lcov.info --verbosity normal

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.16
      if: success() || failure()   # run this step even if previous step failed
      with:
        reports: 'tests/**/lcov.info'
        targetdir: 'coveragereport'
        reporttypes: 'lcov'

    - name: Generate Code Coverage report
      uses: barecheck/code-coverage-action@v1
      if: success() || failure()   # run this step even if previous step failed
      with:
        barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
        barecheck-api-key: ${{ secrets.BARECHECK_API_KEY }}
        lcov-file: "./coveragereport/lcov.info"
        send-summary-comment: true
        show-annotations: "warning"